_--------------------------Accessing the layers of the neural network-------------------------------------------
model = Net()
for name, param in model.named_parameters():
    print(name, param.size())

# Accessing the layer and passing the output of one layer as input to the next layer----------------------------
x = images[0].unsqueeze(0)
for i,j in model_scat2.net._modules.items():
    print(i)
    x = j(x)
    print(i,x.shape)
    
#-----------------------------------Checking if backpropagawtion will take through that layer---------------------------------
for name, param in model.named_parameters():
    if(param.requires_grad):#if param.requires_grad:
        print (name)#, param.data)

-------------------------------------Train few layers of the neural network-------------------------------------------------
for name, param in model.named_parameters():
    if('classifier' in name or            #or "denselayer21" in name or "denselayer22" in name or "denselayer23" in name or
      "denselayer24" in name or "norm5" in name ):#if param.requires_grad:
        param.requires_grad = True
        print(name)
    else:
        param.requires_grad = False
        
 -----------------------------------Saving tthe model ----------------------------------------------------------------------
   torch.save({ "epoch" : epoch +1 ,
                "optimizer" : optimizer.state_dict(),
                "state_dict" : model.state_dict(),
                 },filename)
 
   model.load_state_dict(torch.load(weight_file,location=device)["state_dict"])     
